//
// Navbar
//


.navbar {
  position: relative;
  display: flex;
  display: block;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
}

.navbar-nav {
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-item {
    font-size: 2rem;
    font-family: $small-font;
    text-align: center;
  }

  .nav-link {
    display: block;
    padding: 15px 5px;
    color: $white;
    @include hover-focus {
      text-decoration: none;
      background: $pink;
      text-transform: uppercase;
      font-weight: bold;
    }
  }
  @include media-breakpoint-up(lg) {
    .nav-item {
      font-size: 1rem;
      font-family: $large-font;
      text-align: center;
      width: 20%;
    }

    .nav-link {
      padding: 15px 5px;
      color: $deep-green;

      @include hover-focus {
        background: transparent;
        text-transform: none;
        font-weight: normal;
        -webkit-transform: scale(1.3);
        -ms-transform: scale(1.3);
        transform: scale(1.3);
      }
    }
  }
}
// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.
// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.

.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;

  &.show {
    height: 100%;
    background: $magenta;
  }
  @include media-breakpoint-up(lg) {
    &.show {
      height: 100px;
      background: transparent;
    }
  }
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.

.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;
          width: 100%;
        }

        .navbar-collapse {
          display: flex !important;
          // stylelint-disable-line declaration-no-important
          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
          height: 0;
        }
      }
    }
  }
}

.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  font-size: $navbar-toggler-font-size;
  line-height: 1;
  height: 70px;
  background: transparent;
  border: 0;
  cursor: pointer;
  .hamburger {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 24px;

    .hamburger-lines {
      top: 50%;
      display: block;
      margin-top: -2px;
    }

    .hamburger-lines,
    .hamburger-lines:after,
    .hamburger-lines:before {
      position: absolute;
      width: 40px;
      height: 4px;
      transition-timing-function: ease;
      transition-duration: 0.15s;
      transition-property: transform;
      border-radius: 4px;
      background-color: $white;
    }
  }

  .hamburger-lines {
    transition-timing-function: cubic-bezier(.55,.055,.675,.19);
    transition-duration: 0.22s;

    &:after,
    &:before {
      display: block;
      content: "";
    }

    &:before {
      top: -10px;
      transition: top 0.1s ease-in 0.25s,opacity 0.1s ease-in;
    }

    &:after {
      bottom: -10px;
      transition: bottom 0.1s ease-in 0.25s,transform 0.22s cubic-bezier(.55,.055,.675,.19);
    }
  }
  @include media-breakpoint-up(lg) {

  }
}

.navbar-toggler[aria-expanded="true"] {
  .hamburger-lines {
    transition-delay: 0.12s;
    transition-timing-function: cubic-bezier(.215,.61,.355,1);
    transform: rotate(225deg);

    &:before {
      top: 0;
      transition: top 0.1s ease-out,opacity 0.1s ease-out 0.12s;
      opacity: 0;
    }

    &:after {
      bottom: 0;
      transition: bottom 0.1s ease-out,transform 0.22s cubic-bezier(.215,.61,.355,1) 0.12s;
      transform: rotate(-90deg);
    }
  }
}

header {
  background: $pink;
  width: 100%;
  display: inline-block;

  .mobile-logo {
    float: left;
    width: 80%;
    display: flex;
  }

  .desk-logo {
    display: none;
  }
  @include media-breakpoint-up(lg) {
    background: transparent;
    .desk-logo {
      display: block;
      img {
        width: 100%;
      }
    }

    .mobile-logo {
      display: none;
    }
  }
}
