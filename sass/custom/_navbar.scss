// Contents
// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;
  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  > .container-fluid,
  > .container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}
// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}
// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.
// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.

.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}
// Button for toggling the navbar when in its collapsed state

.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  font-size: $navbar-toggler-font-size;
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $border-width solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);
  @include hover-focus {
    text-decoration: none;
  }
  // Opinionated: add "hand" cursor to non-disabled .navbar-toggler elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}
// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.

.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}
// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.

.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container-fluid,
        > .container {
          padding-right: 0;
          padding-left: 0;
        }
      }
      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }
        // For nesting containers, have to redeclare for alignment purposes
        > .container-fluid,
        > .container {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important;
          // stylelint-disable-line declaration-no-important
          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}

.navbar-toggler {
  .hamburger {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 24px;

    .hamburger-lines {
      top: 50%;
      display: block;
      margin-top: -2px;
    }

    .hamburger-lines,
    .hamburger-lines:after,
    .hamburger-lines:before {
      position: absolute;
      width: 40px;
      height: 4px;
      transition-timing-function: ease;
      transition-duration: 0.15s;
      transition-property: transform;
      border-radius: 4px;
      background-color: $deep-green;
    }
  }

  .hamburger-lines {
    transition-timing-function: cubic-bezier(.55,.055,.675,.19);
    transition-duration: 0.22s;

    &:after,
    &:before {
      display: block;
      content: "";
    }

    &:before {
      top: -10px;
      transition: top 0.1s ease-in 0.25s,opacity 0.1s ease-in;
    }

    &:after {
      bottom: -10px;
      transition: bottom 0.1s ease-in 0.25s,transform 0.22s cubic-bezier(.55,.055,.675,.19);
    }
  }
}

.navbar-toggler[aria-expanded="true"] {
  .hamburger-lines {
    transition-delay: 0.12s;
    transition-timing-function: cubic-bezier(.215,.61,.355,1);
    transform: rotate(225deg);

    &:before {
      top: 0;
      transition: top 0.1s ease-out,opacity 0.1s ease-out 0.12s;
      opacity: 0;
    }

    &:after {
      bottom: 0;
      transition: bottom 0.1s ease-out,transform 0.22s cubic-bezier(.215,.61,.355,1) 0.12s;
      transform: rotate(-90deg);
    }
  }
}
